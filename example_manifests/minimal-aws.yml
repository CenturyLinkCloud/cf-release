# The following line helps maintain current documentation at http://docs.cloudfoundry.org.
# code_snippet cf-minimal-aws start
---
name: cf
director_uuid: REPLACE_WITH_DIRECTOR_ID

releases:
- {name: cf, version: latest}

networks:
- name: cf_private
  type: manual
  subnets:
  - range: 10.0.16.0/24
    gateway: 10.0.16.1
    dns: [10.0.0.2]
    reserved: ["10.0.16.2 - 10.0.16.3"]
    static: ["10.0.16.100 - 10.0.16.105"]
    cloud_properties:
      subnet: REPLACE_WITH_PRIVATE_SUBNET_ID

- name: cf_public
  type: manual
  subnets:
  - range: 10.0.0.0/24
    gateway: 10.0.0.1
    dns: [10.0.0.2]
    reserved: ["10.0.0.2 - 10.0.0.10"]
    cloud_properties:
      subnet: REPLACE_WITH_PUBLIC_SUBNET_ID
      security_groups:
        - REPLACE_WITH_PUBLIC_SECURITY_GROUP
        - REPLACE_WITH_BOSH_SECURITY_GROUP

- name: elastic
  type: vip
  cloud_properties: {}

resource_pools:
- name: small_z1
  network: cf_private
  stemcell:
    name: bosh-aws-xen-hvm-ubuntu-trusty-go_agent
    version: REPLACE_WITH_BOSH_STEMCELL_VERSION
  cloud_properties:
    availability_zone: REPLACE_WITH_AZ
    instance_type: c3.large

compilation:
  workers: 6
  network: cf_private
  reuse_compilation_vms: true
  cloud_properties:
    availability_zone: REPLACE_WITH_AZ
    instance_type: c3.large

update:
  canaries: 1
  max_in_flight: 1
  serial: false
  canary_watch_time: 30000-600000
  update_watch_time: 5000-600000

jobs:
- name: nats_z1
  instances: 1
  resource_pool: small_z1
  templates:
  - {name: nats, release: cf}
  - {name: nats_stream_forwarder, release: cf}
  - {name: metron_agent, release: cf}
  networks:
  - name: cf_private
    static_ips: [10.0.16.103]

- name: etcd_z1
  instances: 1
  resource_pool: small_z1
  persistent_disk: 102400
  templates:
  - {name: etcd, release: cf}
  - {name: etcd_metrics_server, release: cf}
  - {name: metron_agent, release: cf}
  networks:
  - name: cf_private
    static_ips: [10.0.16.104]
  properties:
    etcd_metrics_server:
      nats:
        machines: [10.0.16.103]
        password: PASSWORD
        username: nats

- name: consul_z1
  instances: 1
  persistent_disk: 1024
  resource_pool: small_z1
  templates:
  - {name: metron_agent, release: cf}
  - {name: consul_agent, release: cf}
  networks:
  - name: cf_private
    static_ips: [10.0.16.105]
  properties:
    consul:
      agent:
        mode: server

- name: blobstore_z1
  instances: 1
  persistent_disk: 102400
  resource_pool: small_z1
  templates:
  - {name: blobstore, release: cf}
  - {name: metron_agent, release: cf}
  - {name: route_registrar, release: cf}
  - {name: consul_agent, release: cf}
  networks:
  - name: cf_private
  properties:
    consul:
      agent:
        services:
          blobstore: {}
    route_registrar:
      routes:
      - name: blobstore
        port: 80
        registration_interval: 20s
        tags:
          component: blobstore
        uris:
        - "blobstore.REPLACE_WITH_SYSTEM_DOMAIN"

- name: postgres_z1
  instances: 1
  persistent_disk: 1024
  resource_pool: small_z1
  templates:
  - {name: postgres, release: cf}
  - {name: metron_agent, release: cf}
  networks:
  - name: cf_private
    static_ips: [10.0.16.101]
  update:
    serial: true

- name: api_z1
  instances: 1
  resource_pool: small_z1
  templates:
  - {name: cloud_controller_ng, release: cf}
  - {name: cloud_controller_worker, release: cf}
  - {name: cloud_controller_clock, release: cf}
  - {name: metron_agent, release: cf}
  - {name: route_registrar, release: cf}
  - {name: consul_agent, release: cf}
  - {name: go-buildpack, release: cf}
  - {name: binary-buildpack, release: cf}
  - {name: nodejs-buildpack, release: cf}
  - {name: ruby-buildpack, release: cf}
  - {name: php-buildpack, release: cf}
  - {name: python-buildpack, release: cf}
  - {name: staticfile-buildpack, release: cf}
  networks:
  - name: cf_private
  properties:
    consul:
      agent:
        services:
          cloud_controller_ng: {}
    route_registrar:
      routes:
      - name: api
        registration_interval: 20s
        port: 9022
        uris:
        - "api.REPLACE_WITH_SYSTEM_DOMAIN"

- name: ha_proxy_z1
  instances: 1
  resource_pool: small_z1
  templates:
  - {name: haproxy, release: cf}
  - {name: metron_agent, release: cf}
  networks:
  - name: elastic
    static_ips: [REPLACE_WITH_ELASTIC_IP]
  - name: cf_public
    default: [gateway, dns]
  properties:
    ha_proxy:
      ssl_pem: |
        REPLACE_WITH_SSL_CERT_AND_KEY
    router:
      servers:
        z1: [10.0.16.102]

- name: hm9000_z1
  instances: 1
  resource_pool: small_z1
  templates:
  - {name: consul_agent, release: cf}
  - {name: hm9000, release: cf}
  - {name: metron_agent, release: cf}
  - {name: route_registrar, release: cf}
  networks:
  - name: cf_private
  properties:
    consul:
      agent:
        services:
          hm9000: {}
    route_registrar:
      routes:
      - name: hm9000
        registration_interval: 20s
        port: 5155
        uris:
        - "hm9000.REPLACE_WITH_SYSTEM_DOMAIN"

- name: doppler_z1
  instances: 1
  resource_pool: small_z1
  templates:
  - {name: doppler, release: cf}
  networks:
  - name: cf_private
  properties:
    doppler: {zone: z1}
    doppler_endpoint:
      shared_secret: PASSWORD

- name: loggregator_trafficcontroller_z1
  instances: 1
  resource_pool: small_z1
  templates:
  - {name: loggregator_trafficcontroller, release: cf}
  - {name: metron_agent, release: cf}
  - {name: route_registrar, release: cf}
  networks:
  - name: cf_private
  properties:
    traffic_controller: {zone: z1}
    route_registrar:
      routes:
      - name: doppler
        registration_interval: 20s
        port: 8081
        uris:
        - "doppler.REPLACE_WITH_SYSTEM_DOMAIN"
      - name: loggregator
        registration_interval: 20s
        port: 8080
        uris:
          - "loggregator.REPLACE_WITH_SYSTEM_DOMAIN"

- name: uaa_z1
  instances: 1
  resource_pool: small_z1
  templates:
  - {name: uaa, release: cf}
  - {name: metron_agent, release: cf}
  - {name: route_registrar, release: cf}
  networks:
  - name: cf_private
  properties:
    login:
      catalina_opts: -Xmx768m -XX:MaxPermSize=256m
    route_registrar:
      routes:
      - name: uaa
        registration_interval: 20s
        port: 8080
        uris:
        - "uaa.REPLACE_WITH_SYSTEM_DOMAIN"
        - "*.uaa.REPLACE_WITH_SYSTEM_DOMAIN"
        - "login.REPLACE_WITH_SYSTEM_DOMAIN"
        - "*.login.REPLACE_WITH_SYSTEM_DOMAIN"
    uaa:
      admin:
        client_secret: PASSWORD
      batch:
        password: PASSWORD
        username: batch_user
      cc:
        client_secret: PASSWORD
      scim:
        userids_enabled: true
        users:
        - admin|PASSWORD|scim.write,scim.read,openid,cloud_controller.admin,doppler.firehose,routing.router_groups.read
    uaadb:
      address: 10.0.16.101
      databases:
      - {name: uaadb, tag: uaa}
      db_scheme: postgresql
      port: 5524
      roles:
      - {name: uaaadmin, password: PASSWORD, tag: admin}

- name: router_z1
  instances: 1
  resource_pool: small_z1
  templates:
  - {name: gorouter, release: cf}
  - {name: metron_agent, release: cf}
  - {name: consul_agent, release: cf}
  networks:
  - name: cf_private
    static_ips: [10.0.16.102]
  properties:
    dropsonde: {enabled: true}

- name: runner_z1
  instances: 1
  resource_pool: small_z1
  templates:
  - {name: consul_agent, release: cf}
  - {name: dea_next, release: cf}
  - {name: dea_logging_agent, release: cf}
  - {name: metron_agent, release: cf}
  networks:
  - name: cf_private
  properties:
    consul:
      agent:
        services:
          dea:
            check:
              name: dns_health_check
              script: /var/vcap/jobs/dea_next/bin/dns_health_check
              interval: 5m
              status: passing
    dea_next: {zone: z1}

properties:
  networks: {apps: cf_private}
  app_domains: [REPLACE_WITH_SYSTEM_DOMAIN]
  cc:
    allow_app_ssh_access: false
    buildpacks:
      blobstore_type: webdav
      webdav_config:
        password: PASSWORD
        private_endpoint: https://blobstore.service.cf.internal
        public_endpoint: https://blobstore.REPLACE_WITH_SYSTEM_DOMAIN
        secret: PASSWORD
        username: blobstore-username
    droplets:
      blobstore_type: webdav
      webdav_config:
        password: PASSWORD
        private_endpoint: https://blobstore.service.cf.internal
        public_endpoint: https://blobstore.REPLACE_WITH_SYSTEM_DOMAIN
        secret: PASSWORD
        username: blobstore-username
    packages:
      blobstore_type: webdav
      webdav_config:
        password: PASSWORD
        private_endpoint: https://blobstore.service.cf.internal
        public_endpoint: https://blobstore.REPLACE_WITH_SYSTEM_DOMAIN
        secret: PASSWORD
        username: blobstore-username
    resource_pool:
      blobstore_type: webdav
      webdav_config:
        password: PASSWORD
        private_endpoint: https://blobstore.service.cf.internal
        public_endpoint: https://blobstore.REPLACE_WITH_SYSTEM_DOMAIN
        secret: PASSWORD
        username: blobstore-username
    bulk_api_password: PASSWORD
    db_encryption_key: PASSWORD
    default_running_security_groups: [public_networks, dns]
    default_staging_security_groups: [public_networks, dns]
    install_buildpacks:
    - {name: java_buildpack, package: buildpack_java}
    - {name: ruby_buildpack, package: ruby-buildpack}
    - {name: nodejs_buildpack, package: nodejs-buildpack}
    - {name: go_buildpack, package: go-buildpack}
    - {name: python_buildpack, package: python-buildpack}
    - {name: php_buildpack, package: php-buildpack}
    - {name: staticfile_buildpack, package: staticfile-buildpack}
    - {name: binary_buildpack, package: binary-buildpack}
    internal_api_password: PASSWORD
    quota_definitions:
      default:
        memory_limit: 102400
        non_basic_services_allowed: true
        total_routes: 1000
        total_services: -1
    security_group_definitions:
    - name: public_networks
      rules:
      - {destination: 0.0.0.0-9.255.255.255, protocol: all}
      - {destination: 11.0.0.0-169.253.255.255, protocol: all}
      - {destination: 169.255.0.0-172.15.255.255, protocol: all}
      - {destination: 172.32.0.0-192.167.255.255, protocol: all}
      - {destination: 192.169.0.0-255.255.255.255, protocol: all}
    - name: dns
      rules:
      - {destination: 0.0.0.0/0, ports: '53', protocol: tcp}
      - {destination: 0.0.0.0/0, ports: '53', protocol: udp}
    srv_api_uri: https://api.REPLACE_WITH_SYSTEM_DOMAIN
    staging_upload_password: PASSWORD
    staging_upload_user: staging_upload_user
  ccdb:
    address: 10.0.16.101
    databases:
    - {name: ccdb, tag: cc}
    db_scheme: postgres
    port: 5524
    roles:
    - {name: ccadmin, password: PASSWORD, tag: admin}
  consul:
    agent:
      log_level: null
      domain: cf.internal
      servers:
        lan:
        - 10.0.16.105
    encrypt_keys:
    - PASSWORD
    require_ssl: false
  blobstore:
    admin_users:
    - password: PASSWORD
      username: blobstore-username
    secure_link:
      secret: PASSWORD
    tls:
      port: 443
      cert: |+
        -----BEGIN CERTIFICATE-----
        MIIDQjCCAiqgAwIBAgIJAP/z/IO9Vh6HMA0GCSqGSIb3DQEBBQUAMEUxCzAJBgNV
        BAYTAkFVMRMwEQYDVQQIEwpTb21lLVN0YXRlMSEwHwYDVQQKExhJbnRlcm5ldCBX
        aWRnaXRzIFB0eSBMdGQwIBcNMTYwMzAxMTg0NzQ3WhgPMjI4OTEyMTQxODQ3NDda
        MEwxCzAJBgNVBAYTAlVTMRUwEwYDVQQKEwxDTE9VREZPVU5EUlkxJjAkBgNVBAMT
        HWJsb2JzdG9yZS5zZXJ2aWNlLmNmLmludGVybmFsMIIBIjANBgkqhkiG9w0BAQEF
        AAOCAQ8AMIIBCgKCAQEAmcQD0ryug94fllXGM9+mpfHTrT++ZTGZpZ0KCde0iky7
        fprXiVIoHMqgCDnPvSmI7AUZ0TIxYZtm9FfIkdtjk0QW8PbXmbxEBQwH75EgPqNS
        0rkkmwzvVlPI963CTyR0SNpjK8s5GpGO9PQd/OY2AQG1ty1jE1T0YLGdaI2LWsHq
        Y11WFkPYdOfYVnSZeiJkvOkZdZ5KQjZLfgMtyg3cV7yIA552OQiQn3OAFl15K0Bg
        XTjHWfgu5vVGDr/dw0/Dlm2M56EIRBvc/XBJ9/+cj++R3ru77EfJF/h5vn1ahSxZ
        RLWOmDoEOhfDmZ9w/QNWFpHWGJ9dHH7wLN8W/naUkwIDAQABoywwKjAoBgNVHREE
        ITAfgh1ibG9ic3RvcmUuc2VydmljZS5jZi5pbnRlcm5hbDANBgkqhkiG9w0BAQUF
        AAOCAQEABHHiEQW+lG2kM987QeRkycXAwASUtZJV8wrbB8PUn9BC799TVXGkpFLr
        oflUnw4hxAlnwrSYWX+1ueCJ2cR1HoXUMTrwK4a5GUtoHnKJQwnb8K+z7lC+0oqE
        GX+CTb7pPjxwHKGgRw1jjRNLaf3wxnSMrS73OcikF5aGcHylxdCDhAMDvcX6xuqP
        kDMh20Kjg5brpRhZdkBIe9Tja8W4MZfugzZrPamvo14mRinZVnpiXodvhGHxkHvZ
        /SA6HwVuqxoYEC+lqJkLbSqyVPSxLvidKl1Zb6074AZxmVlipmrnEETLaScE98Fp
        XqP9Bw730tiw8W3mZ3NFDQtwAowlqw==
        -----END CERTIFICATE-----
      private_key: |+
        -----BEGIN RSA PRIVATE KEY-----
        MIIEpAIBAAKCAQEAmcQD0ryug94fllXGM9+mpfHTrT++ZTGZpZ0KCde0iky7fprX
        iVIoHMqgCDnPvSmI7AUZ0TIxYZtm9FfIkdtjk0QW8PbXmbxEBQwH75EgPqNS0rkk
        mwzvVlPI963CTyR0SNpjK8s5GpGO9PQd/OY2AQG1ty1jE1T0YLGdaI2LWsHqY11W
        FkPYdOfYVnSZeiJkvOkZdZ5KQjZLfgMtyg3cV7yIA552OQiQn3OAFl15K0BgXTjH
        Wfgu5vVGDr/dw0/Dlm2M56EIRBvc/XBJ9/+cj++R3ru77EfJF/h5vn1ahSxZRLWO
        mDoEOhfDmZ9w/QNWFpHWGJ9dHH7wLN8W/naUkwIDAQABAoIBAQCWc+n9wCrN0oB7
        u6+0wAgyZP1mjnGAWFjraE4TNWFs1Qm8JkvxDFc9XLHbep2ejE5yCceqHn+c7s59
        FIum09CJnt0Hp69ruH+hpJT7PrgbMflvQELmB3EDufVxCy6N+7BgPHc+uZlFOtlz
        Ko1RD/wVXhPsiNdhagW3uvK3A5AwGvsgr4nsxTGPCDGqjeu93X8o7MAgTFgBKWFj
        bSjO2zOXdmO6p+WvdbkphLg6eBv9xU5o6D4f26QXR8V09csmzy5fj3D4n4EoJvCf
        WSZK3yOLb1sjisbkEd7TZQvJ5abo6PSJIXSy4Rpwo1gDZa9PVjwo0pFCiMEdzK49
        Abvm+Q4RAoGBAMqMAW2hpGdNVqxm0tIqJG4c8c/StAB+tkKVh3uYad91RC+NfsmT
        bL00eQ3Uh/ikDQ7Rz+KdVj4KWre8cnczGEOu2qu1894rX3NMC/iCCoZQ+n4vy7Z2
        ZyU1nIto128ppJ8ZF0fHPXYCURYxCsPKOfyxKL8YpNLXciuxNaPF06rJAoGBAMJY
        Xk4OTmINGIQ4e7pKbxcfqz1umXgB4HPIvzosGW/IFfDkOux/LJOfG+TdVDVwc6Ld
        aTVxXEwOUbYVvFLT1dyRkgoHsENlho8XOtlAYFTu5emGrjhZhJGD2SRHBd5lh/wl
        KrocHdlncJpWu5sOx1bSKMFSpi6plRO+2MgxRFZ7AoGBAL4RMYnqRHd32JzBhJYZ
        W8REvxnRVH6eaXQEE3YE6Vz7Evg4pECOal0Gb45t4QaPE33Tn2u9T1+6obSHTzbS
        KLPi0mqNvQG/27s7IoSZqzytotJlEZnwdAwzyen8gSVcg5GUnwcJTYB+3g6gCMT/
        8PhSWrUwcAM2j3m2umorytwZAoGAYO5QQuAxyge8FZ5SX6zmUYMzFlXGZ6uP9k/G
        yM3b9fu2rco3dWNMqWgvMmwNpwWqNy31XnlmzmxJ5uZaYnlTbkqQqz4AdOz7Ov0c
        FeVc5p+svle1J1fGnglD0Ss3SyAavfEPqXmCjb9g0ym1MnYhiDUTrLB7QETGnO2Q
        E/E2o2cCgYAmdOtx7FvbDRHuEQcZQr+dmjj6muvYtNpxLc6hAhPrb3OKI6ORyrt4
        OsPWOCGa5anAoxhdCspJfUpvyarw/o89LUKRfpWvi0Ex/NtEKuIOsW+n7GLdu7Dk
        V3Xku5KIWgELUjTvLDtAZfEHHbkFXOPsyTCbIIalH7seWDUongJ3TA==
        -----END RSA PRIVATE KEY-----
  databases:
    databases:
    - {name: ccdb, tag: cc, citext: true}
    - {name: uaadb, tag: uaa, citext: true}
    port: 5524
    roles:
    - {name: ccadmin, password: PASSWORD, tag: admin}
    - {name: uaaadmin, password: PASSWORD, tag: admin}
  dea_next:
    advertise_interval_in_seconds: 5
    heartbeat_interval_in_seconds: 10
    memory_mb: 33996
  description: Cloud Foundry sponsored by Pivotal
  domain: REPLACE_WITH_SYSTEM_DOMAIN
  etcd:
    machines: [10.0.16.104]
    peer_require_ssl: false
    require_ssl: false
    advertise_urls_dns_suffix: etcd.service.cf.internal
  hm9000:
    url: https://hm9000.REPLACE_WITH_SYSTEM_DOMAIN
    port: 5155
  logger_endpoint:
    port: 4443
  loggregator:
    etcd:
      machines: [10.0.16.104]
  loggregator_endpoint:
    shared_secret: PASSWORD
  metron_agent:
    zone: z1
    deployment: minimal-aws
  metron_endpoint:
    shared_secret: PASSWORD
  nats:
    machines: [10.0.16.103]
    password: PASSWORD
    port: 4222
    user: nats
  ssl:
    skip_cert_verify: true
  system_domain: REPLACE_WITH_SYSTEM_DOMAIN
  system_domain_organization: default_organization
  uaa:
    clients:
      cf:
        access-token-validity: 600
        authorities: uaa.none
        authorized-grant-types: implicit,password,refresh_token
        autoapprove: true
        override: true
        refresh-token-validity: 2592000
        scope: cloud_controller.read,cloud_controller.write,openid,password.write,cloud_controller.admin,scim.read,scim.write,doppler.firehose,uaa.user,routing.router_groups.read
      cc-service-dashboards:
        authorities: clients.read,clients.write,clients.admin
        authorized-grant-types: client_credentials
        scope: openid,cloud_controller_service_permissions.read
        secret: PASSWORD
      cloud_controller_username_lookup:
        authorities: scim.userids
        authorized-grant-types: client_credentials
        secret: PASSWORD
      cc_routing:
        authorities: routing.router_groups.read
        secret: PASSWORD
        authorized-grant-types: client_credentials
      gorouter:
        authorities: routing.routes.read
        authorized-grant-types: client_credentials,refresh_token
        secret: PASSWORD
      tcp_emitter:
        authorities: routing.routes.write,routing.routes.read
        authorized-grant-types: client_credentials,refresh_token
        secret: PASSWORD
      tcp_router:
        authorities: routing.routes.read
        authorized-grant-types: client_credentials,refresh_token
        secret: PASSWORD
      doppler:
        authorities: uaa.resource
        secret: PASSWORD
      login:
        authorities: oauth.login,scim.write,clients.read,notifications.write,critical_notifications.write,emails.write,scim.userids,password.write
        authorized-grant-types: authorization_code,client_credentials,refresh_token
        redirect-uri: https://login.REPLACE_WITH_SYSTEM_DOMAIN
        scope: openid,oauth.approvals
        secret: PASSWORD
      servicesmgmt:
        authorities: uaa.resource,oauth.service,clients.read,clients.write,clients.secret
        authorized-grant-types: authorization_code,client_credentials,password,implicit
        autoapprove: true
        redirect-uri: https://servicesmgmt.REPLACE_WITH_SYSTEM_DOMAIN/auth/cloudfoundry/callback
        scope: openid,cloud_controller.read,cloud_controller.write
        secret: PASSWORD
    jwt:
      signing_key: |
        -----BEGIN RSA PRIVATE KEY-----
        MIICXAIBAAKBgQDHFr+KICms+tuT1OXJwhCUmR2dKVy7psa8xzElSyzqx7oJyfJ1
        JZyOzToj9T5SfTIq396agbHJWVfYphNahvZ/7uMXqHxf+ZH9BL1gk9Y6kCnbM5R6
        0gfwjyW1/dQPjOzn9N394zd2FJoFHwdq9Qs0wBugspULZVNRxq7veq/fzwIDAQAB
        AoGBAJ8dRTQFhIllbHx4GLbpTQsWXJ6w4hZvskJKCLM/o8R4n+0W45pQ1xEiYKdA
        Z/DRcnjltylRImBD8XuLL8iYOQSZXNMb1h3g5/UGbUXLmCgQLOUUlnYt34QOQm+0
        KvUqfMSFBbKMsYBAoQmNdTHBaz3dZa8ON9hh/f5TT8u0OWNRAkEA5opzsIXv+52J
        duc1VGyX3SwlxiE2dStW8wZqGiuLH142n6MKnkLU4ctNLiclw6BZePXFZYIK+AkE
        xQ+k16je5QJBAN0TIKMPWIbbHVr5rkdUqOyezlFFWYOwnMmw/BKa1d3zp54VP/P8
        +5aQ2d4sMoKEOfdWH7UqMe3FszfYFvSu5KMCQFMYeFaaEEP7Jn8rGzfQ5HQd44ek
        lQJqmq6CE2BXbY/i34FuvPcKU70HEEygY6Y9d8J3o6zQ0K9SYNu+pcXt4lkCQA3h
        jJQQe5uEGJTExqed7jllQ0khFJzLMx0K6tj0NeeIzAaGCQz13oo2sCdeGRHO4aDh
        HH6Qlq/6UOV5wP8+GAcCQFgRCcB+hrje8hfEEefHcFpyKH+5g1Eu1k0mLrxK2zd+
        4SlotYRHgPCEubokb2S1zfZDWIXW3HmggnGgM949TlY=
        -----END RSA PRIVATE KEY-----

      verification_key: |
        -----BEGIN PUBLIC KEY-----
        MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDHFr+KICms+tuT1OXJwhCUmR2d
        KVy7psa8xzElSyzqx7oJyfJ1JZyOzToj9T5SfTIq396agbHJWVfYphNahvZ/7uMX
        qHxf+ZH9BL1gk9Y6kCnbM5R60gfwjyW1/dQPjOzn9N394zd2FJoFHwdq9Qs0wBug
        spULZVNRxq7veq/fzwIDAQAB
        -----END PUBLIC KEY-----

    ssl:
      port: -1
    url: https://uaa.REPLACE_WITH_SYSTEM_DOMAIN
# code_snippet cf-minimal-aws end
# The previous line helps maintain current documentation at http://docs.cloudfoundry.org.
